如何进行学术写作
**********************

写作之前的思考
#######################

谁会来读我的文章？
=========================

#. 是专业的人吗？他们会希望我遵循某种学术约定，并且使用标准的写作格式吗？
#. 还是有一些背景知识的一般的读者？
#. 还是不太了解这方面的读者？

他们会希望我做什么？
=========================

#. 是娱乐他们吗？
#. 还是提供一些新的知识（科普）？
#. 还是帮助他们更加理解某些东西？
#. 还是帮助他们去解决现实生活中某些实际的问题？

他们可能有多少前置知识？
=========================
 
#. 他们有理解要研究的话题吗？
#. 他们有意识到要研究的这个问题吗？
#. 还是说他们没有意识到？
#. 还是说他们根本没有这个问题，而只是我的问题？
#. 他们是否理解这个问题的严重性，还是说必须要指明这个问题不解决的话可能有什么样的后果？

读者会怎么对我的解决方法进行反馈？
==================================================

#. 我的观点和读者的观点是不是对立的？如果是的话，就需要非常小心地来改变他们的观点
#. 他们会不会用一些标准的问句来反对我的解决方案？
#. 他们是否关心我是怎么一步一步地解决这个问题的？


整个论文的写作，就是跟你的读者的一个无声的交流。
跟正常的交流不一样的是说，他不是互动的，而说你要一开始就想好，整个交流应该是一个什么的过程，要想清楚读者是谁，他们需要什么。
所以你在写文章时，而写的能满足他们的需求，使得他们能信服你写的东西。


怎么找到要研究的问题
#######################

区分什么是question什么是problem？
==================================

question就是疑问，就是说问一个问题，然后需要来做答案的；

problem，可认为是一个困难，就是存在一个问题，如果不去解决他的话，可能会带来一些危害；

.. important:: 

    往细的说，一个疑问不一定会带来一个问题，一些问题回答与否，并不都会带来什么后果；但有些问题的回答可以解决很大的问题

    * a problem或者一个困难或者一个问题，就是研究界觉得是值得去解决的一件事情
    * a question或者说一个疑问呢，是找到一个问题的途径，也就是说，针对话题问一些问题使得我们可以找到一些方法来解决某个problem

    这两个是可以区分开的，也就是针对一个话题，要问很多这样子的问题，然后找出里面到底谁值得去回答


怎么样从兴趣到一个话题(兴趣到话题再到疑问)
=================================================

在通过读一些文章之后去发现自己没有发现的兴趣，然后从中找到一个话题，话题主要取决于自己的兴趣。

对于技术领域来说，能考虑的就那么几件事情：

* 怎么样把一个东西的效果做出来，就是针对一个问题我们提出个算法，使得之前的算法都不是很行，用了这个算法之后行了；
* 怎么样把它做大，数据更大，整个规模更大；
* 怎么把它做便宜一点；
* 怎么样把它做安全一些；

看到一个技术点或者一个话题可以带上以上四点来考虑；
在这之后看看自己对什么东西感兴趣，然后针对这些兴趣去找到对应的话题。


如何将话题变小，并使其能开始做研究？
============================================

当找到合适的话题的时候，就要问一些问题了

常见的错误：当找到一个合适的话题的时候，就会迫不及待的把这个所有话题相关的文章、资料都找起来读一读。这样子的效率是比较低的。因为你去读的时候，如果没有带着问题出发的话，你可能读起来就不那么的专注了。

老师对于上面例子的观点：

* 与作者不同的是老师觉得，如果你是真的新进入一个领域或者一个话题的时候，不一定能问出什么样的问题出来，可能干的事情就是把那些文章都找出来读一读然后总结一下。
* 因为很多第1年第2年的硕士生或者博士生他干的事情，就是找到一个话题之后，就把整个话题的文章拿出来写一个综述文章，这样子能够对整个话题有一个比较全面的认识，当比较熟悉之后就知道哪一些东西是可以问合适的问题。
* 反过来讲，当你打算去写综述的时候呢你其实也已经问了一个问题：这个话题上有没有很好的综述文章，如果答案是有的话，那么就不要干这个事情了，就读一下综述的文章，在里面有一个比较全面认识，就可以开始想自己的问题；如果没有的话，就变成了一个实际的problem，可以给大家写一个综述的文章，给大家带来价值。在这个时候很有可能就可以问了一个很好的问题。
* 当开始真正的写综述的时候，再去读文章就会去想这篇文章提出的东西怎么样放进我的综述文章里面，也就是综述里面需要对整个话题、整个子领域给画一个比较大的图，然后把所有的工作放进图里面把他们之间联系起来。

更好的是说，在读论文的时候，能带着一些具体的一些问题（能够真的成为最后研究的一些问题）来去读的话，专注度会更好一点。

怎么样评估你的问题
============================================
当对某一个问题感兴趣的时候，应该问自己个更难的问题，叫做”so what“。

就是说我如果解决了这个问题，又怎么样呢，别人会不会关心，他能给别人带来什么样的好处，是不是能够推动整个领域的发展，或者推动领域在一个小地方的发展，能不能启发别人做更多的工作；
也可以反过来问，假设我不去回答这样个问题，会不会有什么样损失，别人会不会觉得错过了一个亿，是不是整个领域可能会停止向前发展很多年。

如果你的答案是说没有，就是说是因为兴趣而做的也没有关系，这可以使得我们继续往深里面走，但是还得不断的去问SO WHAT这个问题，去想我现在的东西so what，别人care不care。

对自己狠一点，这样子才能比较客观一点。在生活中，时不时很tougher的问一问自己so what 这个问题，能够使得生活变得更加简单，发现很多事情其实没必要做的，会发现一些更有意义的事情


怎么样找到我们的问题以及怎么样去问so what这个问题
===============================================================

#. 先把话题给列出来（把topic的名字你找出来），句式：我想去 学习/做/研究 _______
#. 有了话题之后再其后加间接的问题，就是加个w词（6w1h）。
#. 去想清楚问题的重要性，如果问题是一个开放性的问题的话，那么问题的重要性很有可能就是为了帮助读者更好的了解 怎么样 为什么 或者 是不是 的问题啊；

在so what 这个问题上继续展开：

* 在一开始找问题的时候，很有可能找到的问题就是这个领域关心的一些问题。那么这时候就不那么需要去关心这个东西的意义在什么地方；
* 在技术领域，通常我们去找一个方法来解决某一个痛点，只要你的方法真的能够比较好的解决这个痛点的情况下，一般都是有意义的，最后的意义的大小取决你这个痛点到底是有多痛以及是多少人觉得痛。
* 但是，很多时候其实是并不知道我们的这个东西为什么重要，特别是偏理论点的研究或者是很开放性的问题。在这个情况下一开始是OK的，就是说一开始并不知道为什么要做这个事情，随着研究慢慢深入，我们不断的去问自己说，找出来的这个东西（发现这个东西）到底有没有用，别人到底在不在意。
* 所以不断的去想这个事情，也会指导你的研究的方向。当我们有没有想清楚这个事情的时候，很有可能这个研究是不能停的。只有当我们大概是知道为什么别人觉得这东西有用的时候，我们是可以把研究停下来，开始写论文了。

总结一下，这里面是有3步的：

#. 我们的话题(question)是什么；
#. 在这个话题里面的问题(problem)是什么；
#. 为什么别人会在意这个事情(significance)；

.. important:: 
    怎么样从兴趣点开始去找到一个话题，然后把这个话题缩小到足够小的范围，使得我们能够去驾驭它，也使得它足够大到支撑一个比较好的研究；
    
    要在这个话题里面去问很多问题，因为我们的研究都是用来解决问题的，所以一定要有问题。
    
    有了问题之后，你要去问，最重要的 so what的问题，就是说解决这个问题要怎么样。在真的动手去解决问题之前，真的就要去想一想，假设半年之后，1年之后我解决了这个问题，那么别人关不关心这个事情。
    
    在做任何项目之前，都应该去想想这个东西做出来它的意义在于什么，不要去想说能不能做出来。就假设说有足够的资源，运气足够好，能把它做出来最好的结果以及能做出来情况下，去想一想对别人的影响有多大（这个事情的意义的天花板在什么地方）。


一个问题的结构是什么样子的：
===============================================================

不管是实际的问题还是概念上的问题都有一个下面的结构：

* **situation condition就是说你的状况**
* **你不想要的一个结果（如果不解决它的话，可能需要去付某一些不想付的代价）**

需要注意的是所谓的代价，其实是读者关心的，不是我们自己要付的代价而是他们要付的代价

**概念性的问题会有什么样的区别?**

.. important:: 

    在实际问题上，我们的状况通常是一些状态，导致会付出我们不想要付的代价；

    但对于这种概念上的问题来讲我们的状态通常是说不知道某或者不了解某一个东西，这就是condition；一般来说不理解某一个东西，不会给我们带来立即的一个代价（除了考试），所以一般不会去谈他的代价。
    
    那它的后果是什么：如果不能了解这个问题的话，那么就会无法去理解一个更重要的问题，而这个重要的问题，大家都觉得我们应该去了解的；


怎么讲故事
#################

我们要找东西支持我们的一些论点，与足够多的原因和论据，这样子别人才会觉得我们的论点是可信的；
这个跟我们之前要去考虑说我们的研究问题为什么有价值，我们不断的问SO WHAT这个问题的时候同样道理；
在组织你的故事的时候，要不断的从读者的角度去问这个问题，为什么我应该相信这个事情；
如果整个这本书要抽出两个核心的问题的话，其实也就是 **So What** 和 **我为什么要信** 这两个问题；
所以在研究开始和研究结束的过程中，不断的给自己问这两个问题基本上就可能指导怎么样做研究了


论证的顺序
====================

整个论证里面几个核心的东西：

#. 首先要提出一个论点；
#. 然后用一些原因和证据来支撑我们的论点；
#. 有时候需要承认和回复一些别的观点；
#. 最后有时候要提供一下你推理的一些逻辑的原则；

当理解每一句话他在整个论述中扮演的角色的时候，既能够帮我们去更好的读一篇文章，而且是用批判性的眼光去读一篇文章，也能帮助我们在构造自己的故事的时候，能够让每一句话都在发挥他的用处；
所以写作的核心是说，要在脑海中去预测这样子对话，使得在跟人真的对话之前，把所有这种可能性——别人攻击你的地方，以及缺失的理由、论点、论据全部补充起来，这样子就能写出别人相信的故事了


论证的几个重要元素
========================

.. important:: 

    * 论点：我们核心的理由是什么东西，很多时候文章最后就是一个核心的论点，当然论点还有别的子论点支撑；
    * 理由：为什么我们的论点是对的；
    * 论据：一些数据点或者别人的工作；
    * 承认和回复：对于别的一个观点的一个说明；
    * 保证：这个逻辑是怎么样过来的，如果读者不理解的话，应该把它说出来，解释一下我们的理由为什么能解释我们的结论好；


用理由和论据来支撑论点
============================

理由必须是在论据之上的，结论是基于好的原因，理由又是基于好的论据；

所谓的论据就包括了，做实验得出来的一些实验的结果，或者前面的值得信任那些工作里面的一些论点，这个是现实存在；理由很多时候更多是一个思维的逻辑，是存在你脑海中的；

一旦我们成功的把论点通过理由和论据支撑住了之后，被大家认可之后，我们的论点也会成为别人工作的一个论据。

我们一个论点需要有原因来支持，这些原因又是在基于我们的论据上面的，所以我们要保证说原因能够合理的解释我们的论点，反过来讲每一个原因也需要有他的论据来支撑才是合理存在的；




使用承认和回复
====================

作者提前的预测读者可能会提的一些反对意见，然后把答案写在这里，这样子在读者读的过程中心中产生问题的时候，作者就在下面就把这些问题给回答掉了。
其实回答本身不是最难的问题，最难的是说在写的时候要假设他们这些问题的存在，就是你要想到你的读者可能会提这样子的问题。

核心是说我们得尽量的去考虑到很周全，去想象你的读者会问这样子的问题；
我们的论点可能有一些反对的意见，或者不同的解释、不同的看法，这样子我们需要去承认这些东西的存在，并且给予回复。


用理由去支撑论文时，读者可能会看不出它们之间的关系：

在读者看不明白的时候，需要补充说明他们之间的联系，不然读者是不会买账的；
这个补充说明一般是一些通用的原则，就是一些大家都能接触的东西，然后把它作为一个通用的原则。在这个原则之下，能够特立出我们的推理逻辑；

当原因和论点之间隔得比较远的时候，需要给出一些推理的保证，来使得读者能清楚的认识到我们的原因和论点是怎么样联系起来的。

关于声明（Claim）
========================

声明就是对研究问题的答案，就是把答案浓缩成一句话变成声明，然后整个文章呢主要是围绕去支撑这个声明；
声明要考虑那么下面这3个问题：

#. 我在做一个什么样类别的声明：因为不同类别的声明，导致可能要支撑他的这些证据是不一样的；
#. 声明够不够具体：因为对于比较空洞的声明，大家读起来会觉得比较空洞；
#. 声明够不够重要：读者觉不觉得有必要去花一篇文章去支撑我这样子的声明；

我们要解决一个有价值的问题，然后我的解决的方法本身应该也要是有价值的。

如何判断是否有价值？

* 我们的方法是可行的，可以花合理的时间和力气来实现它；
* 实现它的代价要少于你不解决这个问题给你带来的代价
* 解决这个问题会不会创造一个更大的问题出来
* 我们的方法为什么要比别的替代的方法更加便宜或更加的快

.. important:: 

    怎么样去看现在想到的声明重不重要?
    
    **把结论反过来看一下反过来的那个结论是长什么样子** ，如果反过来看很奇怪，则说明很重要




